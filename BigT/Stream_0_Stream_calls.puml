@startuml

/' diagram meta data start
config=CallConfiguration;
{
  "rootMethod": "BigT.Stream#Stream(bigt,int,String,String,String,int)",
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": true,
    "cutInterfaceStructures": true,
    "cutDataStructures": true,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 3,
    "backwardDepth": 3,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showMethodParametersTypes": false,
    "showMethodParametersNames": false,
    "showMethodReturnType": false,
    "showPackageLevels": 2,
    "showCallOrder": false,
    "edgeMode": "MethodsOnly", // TypesOnly, MethodsOnly, TypesAndMethods, MethodsAndDirectTypeUsage
    "showDetailedClassStructure": false
  },
  "rootClass": "BigT.Stream",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="LR"
    splines=polyline
    

'nodes 
subgraph cluster_110251553 { 
   	label=tests
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_68952492 { 
   	label=TestRun
	labeljust=l
	fillcolor=white
	style=filled
   
   TestRun110251553XXXinsert0[
	label="+ insert()"
	style=filled
	fillcolor=white
	tooltip="TestRun

null"
	fontcolor=darkgreen
];

TestRun110251553XXXmain1859653459[
	label="+ main()"
	style=filled
	fillcolor=white
	tooltip="TestRun

null"
	fontcolor=darkgreen
];

TestRun110251553XXXquery0[
	label="+ query()"
	style=filled
	fillcolor=white
	tooltip="TestRun

null"
	fontcolor=darkgreen
];
} 
} 

subgraph cluster_2070388 { 
   	label=BigT
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1347465810 { 
   	label=bigt
	labeljust=l
	fillcolor=white
	style=filled
   
   bigt2070388XXXgetColumnCnt104431[
	label="+ getColumnCnt()"
	style=filled
	fillcolor=white
	tooltip="bigt

&#10;	  &#10;	  Gets the total number of unique columns in the database&#10;	  &#10;	  @param numbuf - number of buffers used for sorting functionality to get the&#10;	  column count&#10;	  @return&#10;	  @throws UnknowAttrType&#10;	  @throws LowMemException&#10;	  @throws JoinsException&#10;	  @throws Exception&#10;	 "
	fontcolor=darkgreen
];

bigt2070388XXXgetRowCnt104431[
	label="+ getRowCnt()"
	style=filled
	fillcolor=white
	tooltip="bigt

&#10;	  Gets the total number of unique rows in the database&#10;	  &#10;	  @param numbuf - number of buffers used for sorting functionality to get the&#10;	  row count&#10;	  @return&#10;	  @throws UnknowAttrType&#10;	  @throws LowMemException&#10;	  @throws JoinsException&#10;	  @throws Exception&#10;	 "
	fontcolor=darkgreen
];

bigt2070388XXXopenStream940405539[
	label="+ openStream()"
	style=filled
	fillcolor=white
	tooltip="bigt

&#10;	  Opens the stream of maps&#10;	  &#10;	  @param orderType - Desired order of Results&#10;	  @param rowFilter - Filtering condition on row&#10;	  @param colFilter - Filtering condition on column&#10;	  @param valFilter - Filtering condition on value&#10;	  @param numbuf- number of buffers allocated&#10;	  @return&#10;	  @throws Exception &#10;	  @throws HFBufMgrException &#10;	  @throws HFDiskMgrException &#10;	  @throws HFException &#10;	  @throws InvalidSlotNumberException &#10;	 "
	fontcolor=darkgreen
];
} 

subgraph cluster_1746517850 { 
   	label=Stream
	labeljust=l
	fillcolor=white
	style=filled
   
   Stream2070388XXXStream1250162491[
	label="+ Stream()"
	style=filled
	fillcolor=white
	tooltip="Stream

&#10;	  Constructor for stream class&#10;	  &#10;	  @param bigT - BigTable used in the database&#10;	  @param orderType - order type of results&#10;	  @param rowFilter - filter for the row&#10;	  @param colFilter - filter for the column&#10;	  @param valFilter - filter for the value&#10;	  @param numbuf- number of buffers allocated&#10;	  @throws Exception &#10;	  @throws HFBufMgrException &#10;	  @throws HFDiskMgrException &#10;	  @throws HFException &#10;	  @throws InvalidSlotNumberException &#10;	 "
	penwidth=4
	fontcolor=darkgreen
];
} 
} 

'edges    
TestRun110251553XXXinsert0 -> bigt2070388XXXgetColumnCnt104431;
TestRun110251553XXXinsert0 -> bigt2070388XXXgetRowCnt104431;
TestRun110251553XXXmain1859653459 -> TestRun110251553XXXquery0;
TestRun110251553XXXquery0 -> bigt2070388XXXopenStream940405539;
bigt2070388XXXgetColumnCnt104431 -> bigt2070388XXXopenStream940405539;
bigt2070388XXXgetRowCnt104431 -> bigt2070388XXXopenStream940405539;
bigt2070388XXXopenStream940405539 -> Stream2070388XXXStream1250162491;
    
}
@enduml